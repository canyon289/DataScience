install.package("formatR")
install.packages("formatR")
?ddplyr
?plyr
?ddply
import(plyr)
library(plyr)
?plyr
library(datasets)
str(mtcars)
table(mtcars$mpg,mtcars$cyl)
table(mtcars$cyl)
table(mtcars$cyl,mtcars$mpg)
?table
str(mtcars)
library(ggplot)
library(ggplot2)
qplot(mtcars$cyl,mtcars$mpg)
?qplot
qplot(mpg, data = mtcars facets =.cyl)
qplot(mpg, data = mtcars, facets =.cyl)
qplot(mpg, data = mtcars, facets =cyl)
qplot(mpg, data = mtcars, facets =.~cyl)
?qplot
qplot(mpg, wt, data = mtcars, geom="path")
qplot(factor(cyl), wt, data = mtcars, geom=c("boxplot", "jitter"))
qplot(factor(cyl), wt, data = mtcars, geom=c("boxplot"))
qplot(factor(cyl), wt, data = mtcars, geom=boxplot
)
qplot(factor(cyl), wt, data = mtcars, geom=jitter)
qplot(mpg, data = mtcars, geom = "dotplot")
qplot(factor(cyl), wt, data = mtcars, geom=c("boxplot", "jitter"))
qplot(cyl, wt, data = mtcars, geom=c("boxplot", "jitter"))
?swirl
library(swirl)
library(tutorial)
setwd("~/")
?knitr
library(knitr)
?knitr
setwd("~/GitHub/DataScience/Reproducible Research/Assignment 2")
storm = read.csv(bzfile("storm.bz2"))
ss = head(storm)
str(ss["PROPDMGEXP"])
str(ss[["PROPDMGEXP"]])
str(ss$"PROPDMGEXP")
str(ss$"PROPDMG")
str(ss["PROPDMG"])
str(ss[["PROPDMG"])
str(ss[["PROPDMG"]])
a = function(x){x+1}
tapply(ss[["PROPDMG"]])
tapply(ss[["PROPDMG"]].a)
tapply(ss[["PROPDMG"]],a)
sapply(ss[["PROPDMG"]],a)
cbind(ss,damage = sapply(ss[["PROPDMG"]],a))
fdamage = function(x){
#Set Multipliers
factorlevel = c("","-","?","+","0","1","2","3","4","5","6","7","8","B","h","H","K","m","M")
#Some of the factor levels were not known and were assumed to be zero
factormultiplier = c(0,0,0,0,0,1,2,3,4,5,6,7,10^9,100,100,1000,1000,10^6,10^6)
names(factormultiplier) = factorlevel
return(factormultiplier[[x]])
}
damage
damage = sapply(ss[["PROPDMG"]],a))
damage = sapply(ss[["PROPDMG"]],a)
damage
damage*damage
str(storm)
system.time(damage <- (storm[["CROPDMG"]]*lapply(storm[["CROPDMGEXP"]],fdamage)+
storm[["PROPDMG"]]*lapply(storm[["PROPDMGEXP"]],fdamage)))
system.time(damage <- (storm[["CROPDMG"]]*lapply(storm[["CROPDMGEXP"]],fdamage)
+storm[["PROPDMG"]]*lapply(storm[["PROPDMGEXP"]],fdamage)))
system.time(damage <- (storm[["CROPDMG"]]*lapply(storm[["CROPDMGEXP"]],fdamage)))
system.time(damage <- (storm[["CROPDMG"]]*sapply(storm[["CROPDMGEXP"]],fdamage)))
str(damage)
summary(damage)
system.time(damage <- (storm[["CROPDMG"]]*sapply(storm[["CROPDMGEXP"]],fdamage)
+storm[["PROPDMG"]]*lapply(storm[["PROPDMGEXP"]],fdamage)))
system.time(damage <- (storm[["CROPDMG"]]*sapply(storm[["CROPDMGEXP"]],fdamage)
+storm[["PROPDMG"]]*sapply(storm[["PROPDMGEXP"]],fdamage)))
str(damage)
storm = cbind(storm,damage)
str(storm)
ef = ddply(storm, .(ENV), summarise, FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES),
total = sum(FATALITIES + INJURIES))
import(plyr)
ef = ddply(storm, .(ENV), summarise, FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES),
total = sum(FATALITIES + INJURIES))
library(plyr)
ef = ddply(storm, .(ENV), summarise, FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES),
total = sum(FATALITIES + INJURIES))
ef = ddply(storm, .(EVTYPE), summarise, FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES),
total = sum(FATALITIES + INJURIES))
ef
ef = ddply(storm, .(EVTYPE), summarise, FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES))
ef
levels(storm$EVTYPE)
storm = read.csv(bzfile("storm.bz2"))
dim(storm)
damage <- (storm[["CROPDMG"]]*sapply(storm[["CROPDMGEXP"]],fdamage)
+storm[["PROPDMG"]]*sapply(storm[["PROPDMGEXP"]],fdamage)))
damage <- (storm[["CROPDMG"]]*sapply(storm[["CROPDMGEXP"]],fdamage)
+storm[["PROPDMG"]]*sapply(storm[["PROPDMGEXP"]],fdamage))
storm = cbind(storm,damage)
levels(storm$ENVTYPE)
levels(storm$EVTYPE)
download.file(url = "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", destfile = "storm.bz2")
storm = read.csv(bzfile("storm.bz2"))
levels(storm$EVTYPE)
damage <- (storm[["CROPDMG"]]*sapply(storm[["CROPDMGEXP"]],fdamage)
+storm[["PROPDMG"]]*sapply(storm[["PROPDMGEXP"]],fdamage))
storm = cbind(storm,damage)
library(plyr)
ef = ddply(storm, .(EVTYPE), summarise, fatalities = sum(FATALITIES), injuries = sum(INJURIES), affected = (sum(FATALITIES,INJURIES), damage = sum(damage)))
ef = ef[order(ef$fatalities, decreasing = TRUE),]
str(ef)
library(plyr)
ef = ddply(storm, .(EVTYPE), summarise, fatalities = sum(FATALITIES), injuries = sum(INJURIES), affected = (sum(FATALITIES,INJURIES), damage = sum(damage)))
ef = ddply(storm, .(EVTYPE), summarise, fatalities = sum(FATALITIES), injuries = sum(INJURIES), affected = (sum(FATALITIES,INJURIES), damage = sum(damage)))
ef = ddply(storm, .(EVTYPE), summarise, fatalities = sum(FATALITIES), injuries = sum(INJURIES), affected = (sum(FATALITIES)+sum(INJURIES), damage = sum(damage)))
ef = ddply(storm, .(EVTYPE), summarise, fatalities = sum(FATALITIES), injuries = sum(INJURIES), affected = (sum(FATALITIES)+sum(INJURIES)), damage = sum(damage)))
ef = ddply(storm, .(EVTYPE), summarise, fatalities = sum(FATALITIES), injuries = sum(INJURIES), affected = (sum(FATALITIES)+sum(INJURIES)), damage = sum(damage))
str(ef)
ef = ef[order(ef$fatalities, decreasing = TRUE),]
str(ef)
ef
