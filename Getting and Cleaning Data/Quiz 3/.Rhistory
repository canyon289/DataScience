help(aov)
help(anova)
install.packages(KernSmooth)
install.packages("KernSmooth")
library("KernSmooth")
print('Hello World')
print('This is for my Coursera Screenshot!')
help(by)
#Question 1
library(datasets)
data(iris)
head(iris)
split(iris, iris$species)
tapply(iris$Sepal.Length, iris$species, mean)
length(iris$sepal.Length)
length(iris$Sepal.Length)
length(iris$species)
length(iris$Species)
length(iris["Species"])
iris["Species"]
length(iris["Species"])
type(1)
factor(1)
class(1)
class(iris["Species"])
class(iris$Species)
head(iris["Species"])
head(iris$Species)
source('~/.active-rstudio-document', echo=TRUE)
y = iris$Species
tapply(iris$Sepal.Length, iris$Species, mean)
z = tapply(iris$Sepal.Length, iris$Species, mean)
z$setosa
z
type(z)
class(Z)
class(z)
z["setosa"]
help(tapply)
apply(iris[,1:4], 2, mean)
str(apply)
data(mtcars)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars["mpg"], mtcars["cyl"], mean)
length(mtcars["mpg"], mtcars["cyl"])
length(mtcars["mpg"])
tapply(mtcars$hp, mtcars$cyl, mean)
$4
a = tapply(mtcars$hp, mtcars$cyl, mean)
a$4
a[4]
a["4"]
type(a)
class(a)
tapply(mtcars$hp, mtcars$cyl, mean)
$"4"
$'4'
a["8"] - a["4"]
setmean = function() 2
setmean
setmean +4
setmean
setmean(1)
setmean()
f<<- 2
f<1
f=1
makeVector <- function(x = numeric()) {
m <- NULL #Sets m to null
set <- function(y) { #Creates function with sets y to x
x <<- y
m <<- NULL
}
get <- function() x   #Get returns value of x
setmean <- function(mean) m <<- mean  #sets value of mean
getmean <- function() m #Returns value of mean
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean() #Gets value of m from special vector get mean value
if(!is.null(m)) { #If m is not null get data
message("getting cached data")
return(m)
}
data <- x$get() get value of x
m <- mean(data, ...) #Calculate mean
x$setmean(m) #Set value of meaan
m
}
cachemean <- function(x, ...) {
m <- x$getmean() #Gets value of m from special vector get mean value
if(!is.null(m)) { #If m is not null get data
message("getting cached data")
return(m)
}
data <- x$get() get value of x
m <- mean(data, ...) #Calculate mean
x$setmean(m) #Set value of meaan
m
}
#Question 1
library(datasets)
data(iris)
z = tapply(iris$Sepal.Length, iris$Species, mean)
z
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars["mpg"], mtcars["cyl"], mean)
a = tapply(mtcars$hp, mtcars$cyl, mean)
a["8"] - a["4"]
get.packages("knitr")
install.packages("knitr")
install.packages("knitr")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r fig.width=7, fig.height=6}
plot(cars)
summary(cars)
source('~/.active-rstudio-document', echo=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
install.packages("httr")
help(oauth_app)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "60a49a2100c8bd1e15cc")
help(oauth_app)
myapp <- oauth_app("github", key = "60a49a2100c8bd1e15cc", secret = "0a81c5059b8fd7003d81f240ebd46bcdede64e4b" )
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
library("httpuv")
setwd("C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Quiz 3")
#Question 1
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",
destfile = "Fss06hid.csv")
q1 = read.table(file = "Fss06hid.csv", header = TRUE, sep = ",")
#use which to figure out which houses with more than 10 acres sold over 10million
#worth of stuff
q1[q1$ACR == 3 & q1$AGS == 6]
q1[q1$ACR == 3 & q1$AGS == 6,]
which(q1[q1$ACR == 3 & q1$AGS == 6,])
which(q1[,q1$ACR == 3 & q1$AGS == 6])
q1[$ACR == 3 & q1$AGS == 6,]
q1[q1$ACR == 3 & q1$AGS == 6,]
df <- data.frame(x = 1:3, y = 3:1, z = letters[1:3])
df
df[df$x==2]
df[df$x==2,]
head(q1[q1$ACR == 3 & q1$AGS == 6,])
head((q1[q1$ACR == 3 & q1$AGS == 6),])
head(q1[(q1$ACR == 3 & q1$AGS == 6),])
head(rownames(q1[(q1$ACR == 3 & q1$AGS == 6),]))
df
df[df$x == 2]
df[df$x == 2,]
rows(df[df$x == 2,])
rownames(df[df$x == 2,])
z = (q1$ACR == 3 & q1$AGS == 6),)
z = (q1$ACR == 3 & q1$AGS == 6))
z = (q1$ACR == 3 & q1$AGS == 6)
which(z)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="data.jpg")
library(jpeg)
install.package("jpeg")
install.packages("jpeg")
library(jpeg)
ls()
jpeg("data.jpg")
z = jpeg("data.jpg")
z
?jpeg
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="data.jpg")
j = readJPEG("data.jpg", native = TRUE)
close(j)
dl(j)
rm(j)
rm(list=ls(all=TRUE))
