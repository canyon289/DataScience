length(intersect(gdp$X,country$CountryCode))
table(country$CountryCode)
col.names(gdp)[1] = "CountryCode"
colnames(gdp)[1] = "CountryCode"
str(gdp)
m = merge(gdp,Country, by = "CountryCode")
m = merge(gdp,country, by = "CountryCode")
str(m)
?sort
m[sort(m$X.1, decreasing = TRUE)]
m[sort(m$X.1, decreasing = TRUE),]
m = m[sort(m$X.1, decreasing = TRUE),]
str(m)
head(m)
head(m$X.1)
head(sort(m$X.1))
tail(gdp)
tail(country)
length(m)
dim(m)
complete.cases(m)
na.omit(m)
table(m$countrycode)
m
str(m)
table(m$CountryCode)
m = merge(gdp,country, by = "CountryCode")
table(m$CountryCode)
f
sort(f)
sort(f, descresing)
gdp
colnames(gdp)[1:2] = C("CountryCode","GDPRank"
)
colnames(gdp)[1:2] = c("CountryCode","GDPRank")
str(gdp)
m = merge(gdp,country, by = "CountryCode")
str(gdp)[1:5]
head(m)
m[sort(m$gdp),]
m[sort(m$GDPRank),]
m = m[sort(m$gdp),]
m = m[sort(m$GDPRank),]
head(m)
sort(m$GDPRank)
m = merge(gdp,country, by = "CountryCode")
sort(m$GDPRank)
?order
m = m[order(m$GDPRank, decreasing = TRUE)
]
m = m[order(m$GDPRank, decreasing = TRUE),]
head(m$GDPRank)
head(m)
m[13,]
factors(m$IncomeGroup)
factor(m$Income.Group)
tapply(m$GDPRank,m$Income.Rank,mean)
class(m$GDPRank)
class(m$Income.Rank)
tapply(m$GDPRank,m$Income.Group,mean)
head(m$GDPRank, m$Country.Code)
head(m$GDPRank, m$CountryCode)
head(m$GDPRank
)
head(m$CountyCode)
head(m$CountryCode)
?tail
s = tail(m, n =38)
dim(s)
which(m$Income.Group == "Lower middle income")
length(which(m$Income.Group == "Lower middle income"))
length(which(s$Income.Group == "Lower middle income"))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="data.jpg", mode = 'wb')
library(jpeg)
j = readJPEG("data.jpg", native = TRUE)
quantile(j, c(.3,.8))
m$GDPGroups = cut(m$GDPRank, breaks = quantile(m$GDPRank))
summary(m$GDPGroups)
quantile(m$GDPRank)
190/38
seq(1:190, by = 38)
seq(1,190, by = 38)
m$GDPGroups = cut(m$GDPRank, breaks = seq(1,190 by=38))
m$GDPGroups = cut(m$GDPRank, breaks = seq(1,190, by=38))
summary(m$GDPGroups)
table(m$GDPGroups, m$Income.Group)
rowSums(is.na(m)==0)
rowSums(is.na(m)==0,)
rowSums(is.na(m) != ncol(data),)
rowSums(is.na(m) != ncol(m),)
head(m)
is.na(m%GDPRank)
is.na(m$GDPRank)
which(is.na(m$GDPRank))
which(is.na(m$Income.Group))
m$GDPGroups = cut(m$GDPRank, breaks = seq(1,190, by=38))
summary(m$GDPGroups)
length(m$GDPRank)
libary(hmisc)
library(hmisc)
install.packages("hmisc")
install.packages("Hmisc")
library(Hmisc)
m$GDPGroups = cut2(m$GDPRank, g=5))
m$GDPGroups = cut2(m$GDPRank, g=5)
summary(m$GDPGroups)
table(m$GDPGroups,m$Income.Group)
z = seq(1,4 rep=2)
z = seq(1,4, rep=2)
?seq
rep(seq(1,3))
rep(seq(1,3) n = 2)
rep(seq(1,3) each = 2)
rep(seq(1,3), each = 2)
seq(1,3)
rep(seq(1,3), times = 2)
d = data.frame(rep(1,3,each=2))
d
colnames(d) = "test"
d
rep(1,3,each=2)
rep(1:3,each=2)
d = data.frame(rep(1:3,each=2) col.name="test")
?data.frame
d = data.frame(rep(1:3,each=2) col.names="test")
d = data.frame(rep(1:3,each=2), col.names="test")
d
d = data.frame(rep(1:3,each=2))
d
test = rep(1:3,each=2))
test = rep(1:3,each=2)
d = data.frame(test)
d
d[d$test == 1,] = "A"
d
setwd("C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset")
list.files()
list.files(include.dirs = TRUE)
list.files()
names = read.file("features.txt", sep = " ")
names = read.files("features.txt", sep = " ")
names = read.table("features.txt", sep = " ")
str(names)
names = names[["V2"]]
class(names)
names = as.character(names[["V2"]])
as.character(names)
join("a","b","b")
paste("a","b","b")
paste("a","b","b", sep="")
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
}
readfiles("train")
curdir = "C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset"
curdir = "C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset"
curdir = "C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset"
source('C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset/run_analysis.R', echo=TRUE)
source('C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset/run_analysis.R', echo=TRUE)
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
}
readfiles("train")
d = readfiles("train")
debugSource('C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset/run_analysis.R', echo=TRUE)
d = readfiles("train")
str(d)
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(subjects)
#Combine dataframes
df = cbind(subjects,activity,results)
}
d = readfiles("train")
d = readfiles("train")
results
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(results)
#Combine dataframes
df = cbind(subjects,activity,results)
}
d = readfiles("train")
str(d)[1,2]
c("a","b") + c("b","c")
append(c("a","b"),c("b","c"))
colnames(df) = append(c("Subject","Activity"),names)
colnames(d) = append(c("Subject","Activity"),names)
str(d)
summary(d$Subject)
str(d$Subject)
table(d$Subject)
levels(d$Subject)
table(d$activity)
table(d$Activity)
anames = read.table("activity_labels.txt")
curdir = "C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset"
setwd(curdir)
anames = read.table("activity_labels.txt")
anames
anames = as.character(anames$V2)
anames
anames[1]
anames[2]
anames[4]
anames(5)
d[2]$activity
d[2]$Activity
d$Activity[2]
head(d$Activity)
d$Activity[2] = 6
head(d$Activity)
d$Activity[2] = anames[6]
head(d$Activity)
row = 2
df$Activity[row]
d$Activity[row]
head(d)
head(d$Activity)
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(results)
#Combine dataframes
df = cbind(subjects,activity,results)
colnames(df) = append(c("Subject","Activity"),names)
for row in df(){
row$Activity = anames(row$Activity)
}
}
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(results)
#Combine dataframes
df = cbind(subjects,activity,results)
colnames(df) = append(c("Subject","Activity"),names)
for row in df(){
row$Activity = anames(row$Activity)
}
}
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(results)
#Combine dataframes
df = cbind(subjects,activity,results)
colnames(df) = append(c("Subject","Activity"),names)
for row in df{
row$Activity = anames(row$Activity)
}
}
d$Activity[2] = 4
d
str(D)
str(d)
str$actvity = as.factor("str$activity")
str$actvity = as.factor(str$activity)
str$Actvity = as.factor(str$Activity)
type(str$Activity)
class(str$Activity)
class(d$Activity)
d$Actvity = as.factor(d$Activity)
class(d$Activity)
d$Actvity = as.factor(d$Activity)
d$Activity = as.factor(d$Activity)
class(d$Activity)
d$Activity = factor(d$Activity, lables = anames)
d$Activity = factor(d$Activity, labels = anames)
levels(d$Activity)
table(d$Activity)
# This is a script that
# Merges the training and the test sets to create one data set.
# Extracts only the measurements on the mean and standard deviation for each measurement.
# Uses descriptive activity names to name the activities in the data set
# Appropriately labels the data set with descriptive variable names.
# Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
#Set Current Directory
curdir = "C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset"
setwd(curdir)
#Read in feature names
names = read.table("features.txt", sep = " ")
#Convert names into character vector
names = names[["V2"]]
names = as.character(names)
#Read in activities as names
anames = read.table("activity_labels.txt")
anames = as.character(anames$V2)
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(results)
#Combine dataframes
df = cbind(subjects,activity,results)
#Assign column names
colnames(df) = append(c("Subject","Activity"),names)
#Change activity integers to activity names
df$Activity = factor(df$Activity, labels =anames)
}
d = df("train")
d = readfiles("train")
readfiles = function(set){
setwd(paste(curdir,set, sep="/"))
#Read in subjects
subjects = paste("subject_", set, ".txt", sep="")
subjects = read.table(subjects)
#Read in Activity 1-6
activity = paste("y_", set, ".txt", sep="")
activity = read.table(activity)
#Read in results
results = paste("X_", set, ".txt", sep="")
results = read.table(results)
#Combine dataframes
df = cbind(subjects,activity,results)
#Assign column names
colnames(df) = append(c("Subject","Activity"),names)
#Change activity integers to activity names
df$Activity = factor(df$Activity, labels =anames)
df
}
d = readfiles("train")
str(d)
z = readfiles("test")
testtrain = merge(d,z)
testtrain = rbind(d,z)
7352 + 2947
d<-data.frame(name=c("brown cat", "blue cat", "big lion", "tall tiger",
"black panther", "short cat", "red bird",
"short bird stuffed", "big eagle", "bad sparrow",
"dog fish", "head dog", "brown yorkie",
"lab short bulldog"), label=1:14)
d
d$name
type(d$name)
class(d$name)
grep("cat", d$name)
#Read in training and testing data
d = readfiles("train")
z = readfiles("test")
#Merge training and testing data
testtrain = rbind(d,z)
#To extract mean columns
meancolindex = grep("mean",colnames(testtrain))
meancolindex
meancolindex(3:)
meancolindex(3:-1)
meancolindex[3:-1,]
meancolindex[3:,]
meancolindex[-c(1,2),]
meancolindex[-c(1,2)]
tidyset = by(testtrain$Activity, testtrain$Subject, FUN = mean)
warnings()
library(plyr)
ddply(testtrain, .(subject,activity), FUN = mean)
ddply(testtrain, .(Subject,Activity), FUN = mean)
tidyset = ddply(testtrain, .(Subject,Activity), FUN = mean)
a = rep(1:3, num = 2)
a
a = rep(1:3, num = 3)
a
?rep
a = rep(1:3, times = 2)
a
b = seq(1:3, rep = 2)
b = seq(rep(1:3)
)
a
b
tidyset = ddply(testtrain, .(Subject,Activity), summarize, FUN = mean)
tidyset = ddply(testtrain, c(Subject,Activity), FUN = mean)
tidyset = ddply(testtrain, .(Subject,Activity), numcolwise(mean))
View(testtrain)
View(testtrain)
View(tidyset)
tidyset = ddply(testtrain, .(Subject,Activity), .fun=mean)
tidyset = ddply(testtrain, .(Subject,Activity), .fun=mean, summarize)
View(tidyset)
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
dfx
tidyset = ddply(testtrain, .(Subject,Activity), .fun=mean())
tidyset = ddply(testtrain, .(Subject,Activity), summarize, .fun=mean)
tidyset = ddply(testtrain, .(Subject,Activity), .fun=mean)
tidyset = ddply(testtrain, .(Subject,Activity), fun=mean)
View(tidyset)
tidyset = ddply(testtrain, .(Subject,Activity), mean)
tidyset = ddply(testtrain, .(Subject,Activity), mean(numcols()))
tidyset = ddply(testtrain, .(Subject,Activity), mean(ncol()))
tidyset = ddply(testtrain, .(Subject,Activity), mean(ncols()))
tidyset = ddply(testtrain, .(Subject,Activity), mean(numcolwise()))
tidyset = ddply(testtrain, .(Subject,Activity), numcolwise(mean))
str(testtrain)
str(testtrain, list.len=563)
tidyset = ddply(testtrain, .(Subject,Activity), colwise(mean))
str(tidyset)
setdiff(colnames(testtrain),colnames(tidyset))
colnames(testtrain)
class(colnames(testtrain))
colnames(tidyset)
class(colnames(testtrain))
setdiff(colnames(testtrain),colnames(tidyset))
dim(tidyset)
dim(testtrain)
str(testtrain)
a = colnames(testtrain)
b = colnames(tidyset)
setdiff(a,b)
setdiff(b,a)
a = c("a","b")
b = c("b","c")
setdiff(a,b)
setdiff(b,a)
a = colnames(testtrain)
b = colnames(tidyset)
setdiff(b,a)
setdiff(a,b)
setdiff(colnames(testtrain),colnames(tidyset))
setdiff(colnames(testtrain),c("a")
)
colnames(testtrain)[562]
length(colnames(testtrain))
length(colnames(tidyset))
data(iris)
iris
h = ddply(iris,.(Species), colwise(mean))
h
rm(h,iris)
numcols(d)
dim(tidyset)
dim(testtrain)
g = data.frame(a,b)
write(a, file = "testtrain.txt")
write(b, file = "tidy.txt")
table(a)
table(a)>2
table(a)[table(a)>1]
write(table(a)[table(a)>1], file = "repeats.txt")
a = table(a)[table(a)>1]
a
names(table(a)[table(a)>1])
rownames(table(a)[table(a)>1])
colnames(table(a)[table(a)>1])
a
a[1]
class(a)
rownames(a)
length(a)
563-42*2
View(tidyset)
View(tidyset)
getcwd()
curdir = "C:/Users/carbon/Dropbox/Github/DataScience/Getting and Cleaning Data/Course Project/UCI HAR Dataset"
setwd(curdir)
write.file(tidyset, file = "tidydata.txt")
write(tidyset, file = "tidydata.txt")
write.csv(tidyset, destfile = "tidydataset.csv")
str(write.csv)
?write.csv
write.csv(tidyset, file = "tidydataset.csv")
write.table(tidyset, file = "tidydataset.txt", sep = " ")
write.table(tidyset, file = "tidydataset.txt", sep = "\t")
