help(aov)
help(anova)
install.packages(KernSmooth)
install.packages("KernSmooth")
library("KernSmooth")
print('Hello World')
print('This is for my Coursera Screenshot!')
help(by)
#Question 1
library(datasets)
data(iris)
head(iris)
split(iris, iris$species)
tapply(iris$Sepal.Length, iris$species, mean)
length(iris$sepal.Length)
length(iris$Sepal.Length)
length(iris$species)
length(iris$Species)
length(iris["Species"])
iris["Species"]
length(iris["Species"])
type(1)
factor(1)
class(1)
class(iris["Species"])
class(iris$Species)
head(iris["Species"])
head(iris$Species)
source('~/.active-rstudio-document', echo=TRUE)
y = iris$Species
tapply(iris$Sepal.Length, iris$Species, mean)
z = tapply(iris$Sepal.Length, iris$Species, mean)
z$setosa
z
type(z)
class(Z)
class(z)
z["setosa"]
help(tapply)
apply(iris[,1:4], 2, mean)
str(apply)
data(mtcars)
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars["mpg"], mtcars["cyl"], mean)
length(mtcars["mpg"], mtcars["cyl"])
length(mtcars["mpg"])
tapply(mtcars$hp, mtcars$cyl, mean)
$4
a = tapply(mtcars$hp, mtcars$cyl, mean)
a$4
a[4]
a["4"]
type(a)
class(a)
tapply(mtcars$hp, mtcars$cyl, mean)
$"4"
$'4'
a["8"] - a["4"]
setmean = function() 2
setmean
setmean +4
setmean
setmean(1)
setmean()
f<<- 2
f<1
f=1
makeVector <- function(x = numeric()) {
m <- NULL #Sets m to null
set <- function(y) { #Creates function with sets y to x
x <<- y
m <<- NULL
}
get <- function() x   #Get returns value of x
setmean <- function(mean) m <<- mean  #sets value of mean
getmean <- function() m #Returns value of mean
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean() #Gets value of m from special vector get mean value
if(!is.null(m)) { #If m is not null get data
message("getting cached data")
return(m)
}
data <- x$get() get value of x
m <- mean(data, ...) #Calculate mean
x$setmean(m) #Set value of meaan
m
}
cachemean <- function(x, ...) {
m <- x$getmean() #Gets value of m from special vector get mean value
if(!is.null(m)) { #If m is not null get data
message("getting cached data")
return(m)
}
data <- x$get() get value of x
m <- mean(data, ...) #Calculate mean
x$setmean(m) #Set value of meaan
m
}
#Question 1
library(datasets)
data(iris)
z = tapply(iris$Sepal.Length, iris$Species, mean)
z
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars["mpg"], mtcars["cyl"], mean)
a = tapply(mtcars$hp, mtcars$cyl, mean)
a["8"] - a["4"]
get.packages("knitr")
install.packages("knitr")
install.packages("knitr")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r fig.width=7, fig.height=6}
plot(cars)
summary(cars)
source('~/.active-rstudio-document', echo=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile = "phonedata.zip")
install.packages("httr")
help(oauth_app)
oauth_endpoints("github")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "60a49a2100c8bd1e15cc")
help(oauth_app)
myapp <- oauth_app("github", key = "60a49a2100c8bd1e15cc", secret = "0a81c5059b8fd7003d81f240ebd46bcdede64e4b" )
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
library("httpuv")
downloadfile("gdp.csv",
"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
gdp = read.csv(file = "gdp.csv", sep = ",", skip = 10, nrows = 190)
str(gdp)
head(gdp)
gdp = read.csv(file = "gdp.csv", sep = ",", skip = 9, nrows = 190)
str(gdp)
head(gdp)
gdp = read.csv(file = "gdp.csv", sep = ",", skip = 0, nrows = 190)
head(fdp)
head(gdp)
gdp = read.csv(file = "gdp.csv", sep = ",", skip = 4, nrows = 190)
head(gdp)
gdp = read.csv(file = "gdp.csv", sep = ",", skip = 4, nrows = 190,
col.names = c("CountryCode", "Rank","Blank","Country",
"GDP"))
gdp = read.csv(file = "gdp.csv", sep = ",", skip = 4, nrows = 190)
head(gdp)
colnames(gdp)[1,2] = c("CountryCode", "GDPRank")
colnames(gdp)[1:2] = c("CountryCode", "GDPRank")
colnames(gdp)[5] = "GDP"
str(gdp)
head(gdp)
?sapply
sapply(gdp$GDP, gsub, ",","")
gdp$GDP
t = "123,456,789"
gsub(t,",","")
t
?gsub
gsub(",","",t)
sapply(gdp$GDP, gsub, "" , ",")
?sapply
gdp$GDP
lapply(gdp$GDP, gsub, "" , ",")
sapply(gdp$GDP, gsub, "" , ",")
sapply(gdp$GDP, sub, "" , ",")
sapply(gdp$GDP, gsub, "" , ",")
library(nlme)
?nlme
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
weight
install.packages("ggplot2")
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(datasets)
data(airquality)
str(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
?ggplot
?ggplot2
?qplot
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
?aes
qplot(votes, rating, data = movies) + geom_smooth()
?geom_smooth
qplot(votes, rating, data = movies, smooth = "loess")
?qplot
getwd()
setwd(...)
setwd(...)
source(...)
source()
source(..., chrdir = t)
source(..., CHDIR = t)
source(..., CHDIR = T)
?source
source("Assignment2.r", CHDIR = T)
source("Assignment2.r")
sys.frame(1)
sys.frame()
sys.frame()
source("Assignment2.r")
setwd("C:/Users/carbon/Dropbox/Github/DataScience/Exploratory Data Analysis/Assignment 2")
source("Assignment2.r")
ls()
getcwd()
cwd()
?setwd
getwd()
list.files()
setwd("C:/Users/carbon/Dropbox/Github/DataScience/Exploratory Data Analysis/Assignment 2")
list.files()
readRDS(list.files(2))
readRDS(list.files()[2])
list.files()[2]
a,b = 1,2
a,b = c(1,2)
c(a.b) = c(1,2)
list(a,b)
list[a,b] = 1,2
list[a,b] = c(1,2)
list
rm list
rm(list)
setwd("C:/Users/carbon/Dropbox/Github/DataScience/Exploratory Data Analysis/Assignment 2")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
str(NEI)
str(SCC)
summary(NEI$type)
table(NEI$type)
